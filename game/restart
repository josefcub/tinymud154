#!/bin/sh
####################
#
# restart - Restarts the netmud server while rotating database files, for
#           redundancy.  Gratuitously lifted portions (C) The FuzzBall
#           Development Team.  Thanks, guys!
#
####################

##########
#
# Basic Definitions.  Change for your setup.
#
##########

# Locations for the game's files.
GAME=$HOME/tinymud/game
DBFILE=$GAME/data/tinymud.db

# The port that users connect to.
PORT=1701

# Use concentrators or not.  This affects the startup sequence.
NETMUD_CONC=YES
#NETMUD_CONC=NO

##########
#
# Thus begins our script.  You shouldn't have to edit anything below here.
#
##########

echo "Restarting TinyMUD at: `date`"

# Check to see if another copy of us is already running.
running="`ps aux | grep "netmud" | grep $USER | wc -l`"
if [ $running -gt 1 ]; then
  echo "        Another instance of this MUD is already running.  Aborted."
  exit 0
fi

# Get ready to start the MUD.
cd $GAME

# Add restart entries to several files.  logs/commands for do_gripes, and
# logs/restarts for direct human consumption.
touch logs/restarts
echo "`date` - `who am i`" >> logs/restarts
echo "`date +"%-m/%e %R:%S"` RESTART: by `whoami`(-1)" >> logs/commands

# This is where we shuffle databases and verify the conditions necessary for a 
# restart to take place.  It's fairly straightforward.  

# First, take care of the oldest dump.
if [ -r $DBFILE.OLD ]; then
  rm -f $DBFILE.OLD
else
  echo "        Old database not available.  Proceeding."
fi

# Second, shuffle our newest database into position.
if [ -r $DBFILE.NEW ]; then
  mv -f $DBFILE $DBFILE.OLD
  mv -f $DBFILE.NEW $DBFILE
else
  echo "        New database not available.  Proceeding."
fi

# Third, check for the existence of the obvious.
if [ ! -r $DBFILE ]; then
  echo "        Stock database not available.  Aborted."
  exit 1
fi

# Fourth, a simple sanity check.
end="`tail -1 $DBFILE`"
if [ "$end" != '***END OF DUMP***' ]; then
  echo "        Stock database appears corrupt.  Aborted."
  exit 1
fi

# Finally, we're ready to bring the MUD up.  Check to see if they want 
# a concentrator version running first, though.
if [ "$NETMUD_CONC" = "YES" ]; then

  ./netmud.conc $DBFILE $DBFILE.NEW $PORT 4200 > logs/stdouterr.log 2>&1

  # If concentrators are desired, we might as well set up an additional two
  # on $PORT + n, to make it easier for others to connect.  This should also
  # serve as a template for anyone wanting to start up additional conc units
  # in this script.

  CONCPORT=`echo "$PORT + 1" | bc`
  ./concentrate $CONCPORT &
  echo "        Concentrator running for port $CONCPORT"
  CONCPORT=`echo "$CONCPORT + 1" | bc`
  ./concentrate $CONCPORT &
  echo "        Concentrator running for port $CONCPORT"

else
  ./netmud $DBFILE $DBFILE.NEW $PORT > logs/stdouterr.log 2>&1
fi

echo "Server started at: `date`"

# Script complete.  Nothing to see here.  Move along.
